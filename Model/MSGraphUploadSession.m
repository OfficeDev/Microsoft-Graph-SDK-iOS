/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphUploadSession
 *
 */
@implementation MSGraphUploadSession


@synthesize odataType = _odataType;

+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 

        if(_$$$_$$$propertiesNamesMappings==nil) {
    
        _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"uploadUrl", @"uploadUrl", @"expirationDateTime", @"expirationDateTime", @"nextExpectedRanges", @"nextExpectedRanges", nil];
        
    }
    
    return _$$$_$$$propertiesNamesMappings;
}


- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.uploadSession";

    }

	return self;
}


- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
        if(dic!=nil) {
		_uploadUrl = (![dic objectForKey: @"uploadUrl"] || [ [dic objectForKey: @"uploadUrl"] isKindOfClass:[NSNull class]] )?_uploadUrl:[[dic objectForKey: @"uploadUrl"] copy];
		_expirationDateTime = (![dic objectForKey: @"expirationDateTime"] || [ [dic objectForKey: @"expirationDateTime"] isKindOfClass:[NSNull class]] )?_expirationDateTime:[MSOrcObjectizer dateFromString:[dic objectForKey: @"expirationDateTime"]];

        if([dic objectForKey: @"nextExpectedRanges"] != [NSNull null]){
            _nextExpectedRanges = [[MSOrcChangesTrackingArray alloc] init];
            
            for (id object in [dic objectForKey: @"nextExpectedRanges"]) {
                [_nextExpectedRanges addObject:[object copy]];
            }
            
            [(MSOrcChangesTrackingArray *)_nextExpectedRanges resetChangedFlag];
        }
        
    }
    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.uploadUrl copy];if (curVal!=nil) [dic setValue: curVal forKey: @"uploadUrl"];}
	{id curVal = [MSOrcObjectizer stringFromDate:self.expirationDateTime];if (curVal!=nil) [dic setValue: curVal forKey: @"expirationDateTime"];}
	{    NSMutableArray *curVal = [[NSMutableArray alloc] init];
    
    for(id obj in self.nextExpectedRanges) {
       [curVal addObject:[obj copy]];
    }
    
    if([curVal count]==0) curVal=nil;
if (curVal!=nil) [dic setValue: curVal forKey: @"nextExpectedRanges"];}
    [dic setValue: @"#microsoft.graph.uploadSession" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.uploadUrl;
    if([self.updatedValues containsObject:@"uploadUrl"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"uploadUrl"];
            }
    }
	{id curVal = self.expirationDateTime;
    if([self.updatedValues containsObject:@"expirationDateTime"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[MSOrcObjectizer stringFromDate:curVal] forKey: @"expirationDateTime"];
            }
    }
	{id curVal = self.nextExpectedRanges;
    if([self.updatedValues containsObject:@"nextExpectedRanges"])
    {
            NSMutableArray *curArray = [[NSMutableArray alloc] init];
    
    for(id obj in curVal) {
       [curArray addObject:[obj copy]];
    }
    
            [dic setValue: curArray forKey: @"nextExpectedRanges"];
            }
        else
    {
                
        if(![curVal isKindOfClass:[MSOrcChangesTrackingArray class]] || [(MSOrcChangesTrackingArray *)curVal hasChanged])
        {
                NSMutableArray *curArray = [[NSMutableArray alloc] init];
    
    for(id obj in self.nextExpectedRanges) {
       [curArray addObject:[obj copy]];
    }
    
                 [dic setValue: curArray forKey: @"nextExpectedRanges"];
        }
        
            }}
    return dic;
}


/** Setter implementation for property uploadUrl
 *
 */
- (void) setUploadUrl: (NSString *) value {
    _uploadUrl = value;
    [self valueChangedFor:@"uploadUrl"];
}
       
/** Setter implementation for property expirationDateTime
 *
 */
- (void) setExpirationDateTime: (NSDate *) value {
    _expirationDateTime = value;
    [self valueChangedFor:@"expirationDateTime"];
}
       
/** Setter implementation for property nextExpectedRanges
 *
 */
- (void) setNextExpectedRanges: (NSMutableArray *) value {
    _nextExpectedRanges = value;
    [self valueChangedFor:@"nextExpectedRanges"];
}
       

@end
