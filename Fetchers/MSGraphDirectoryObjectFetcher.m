/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/


#import "MSGraphFetchers.h"
#import "core/core.h"

@implementation MSGraphDirectoryObjectFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphDirectoryObject class]]) {

		_operations = [[MSGraphDirectoryObjectOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphDirectoryObject *directoryObject, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphDirectoryObjectFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphDirectoryObjectFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphDirectoryObjectFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphDirectoryObjectFetcher *)expand:(NSString *)value {
    [super expand:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphDirectoryObject *directoryObject, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphDeviceFetcher *)asDevice {

	return [[MSGraphDeviceFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDevice class]];
}

- (MSGraphDirectoryRoleFetcher *)asDirectoryRole {

	return [[MSGraphDirectoryRoleFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDirectoryRole class]];
}

- (MSGraphDirectoryRoleTemplateFetcher *)asDirectoryRoleTemplate {

	return [[MSGraphDirectoryRoleTemplateFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDirectoryRoleTemplate class]];
}

- (MSGraphGroupFetcher *)asGroup {

	return [[MSGraphGroupFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphGroup class]];
}

- (MSGraphOrganizationFetcher *)asOrganization {

	return [[MSGraphOrganizationFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphOrganization class]];
}

- (MSGraphUserFetcher *)asUser {

	return [[MSGraphUserFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphUser class]];
}

@end
