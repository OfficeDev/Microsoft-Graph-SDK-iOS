/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/


#import "MSGraphFetchers.h"
#import "core/core.h"

@implementation MSGraphEntityFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphEntity class]]) {

		_operations = [[MSGraphEntityOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphEntity *entity, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphEntityFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphEntityFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphEntityFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphEntityFetcher *)expand:(NSString *)value {
    [super expand:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphEntity *entity, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphDirectoryObjectFetcher *)asDirectoryObject {

	return [[MSGraphDirectoryObjectFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphConversationThreadFetcher *)asConversationThread {

	return [[MSGraphConversationThreadFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphConversationThread class]];
}

- (MSGraphCalendarFetcher *)asCalendar {

	return [[MSGraphCalendarFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphCalendar class]];
}

- (MSGraphOutlookItemFetcher *)asOutlookItem {

	return [[MSGraphOutlookItemFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphOutlookItem class]];
}

- (MSGraphConversationFetcher *)asConversation {

	return [[MSGraphConversationFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphConversation class]];
}

- (MSGraphProfilePhotoFetcher *)asProfilePhoto {

	return [[MSGraphProfilePhotoFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphProfilePhoto class]];
}

- (MSGraphDriveFetcher *)asDrive {

	return [[MSGraphDriveFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDrive class]];
}

- (MSGraphSubscribedSkuFetcher *)asSubscribedSku {

	return [[MSGraphSubscribedSkuFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphSubscribedSku class]];
}

- (MSGraphMailFolderFetcher *)asMailFolder {

	return [[MSGraphMailFolderFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphMailFolder class]];
}

- (MSGraphCalendarGroupFetcher *)asCalendarGroup {

	return [[MSGraphCalendarGroupFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphCalendarGroup class]];
}

- (MSGraphContactFolderFetcher *)asContactFolder {

	return [[MSGraphContactFolderFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphContactFolder class]];
}

- (MSGraphAttachmentFetcher *)asAttachment {

	return [[MSGraphAttachmentFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphAttachment class]];
}

- (MSGraphDriveItemFetcher *)asDriveItem {

	return [[MSGraphDriveItemFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphDriveItem class]];
}

- (MSGraphShareFetcher *)asShare {

	return [[MSGraphShareFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphShare class]];
}

- (MSGraphPermissionFetcher *)asPermission {

	return [[MSGraphPermissionFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphPermission class]];
}

- (MSGraphThumbnailSetFetcher *)asThumbnailSet {

	return [[MSGraphThumbnailSetFetcher alloc] initWithUrl:@"" parent:self asClass:[MSGraphThumbnailSet class]];
}

@end
